package it.grational.compare

import spock.lang.*

/**
 * This Spock specification was auto generated by 'gigawatt'
 * @author d7392
 * @date 21-03-2021 06.07
 */
class ComparableArrayUSpec extends Specification {

	@Shared int PRECEDE = -1
	@Shared int EQUAL = 0
	@Shared int FOLLOW = 1

	@Unroll
	def "Should return the correct comparison value given #left and #right"() {
		given:
			ComparableArray a = new Object() as ComparableArray
			ComparableArray b = new Object() as ComparableArray
		and:
			a.setArray(left.toArray())
			b.setArray(right.toArray())
		when:
			int comparison = ( a <=> b )
		then:
			comparison == expectedResult
		where:
			left                | right                       || expectedResult
			['AWP:1','AWCR:2']  | ['AWP:1','AWCR:2']          || EQUAL
			// common root cases
			['AWP:1','AWCR:2']  | ['AWP:1','AWCR:2','AWCR:3'] || PRECEDE
			['AWP:1','AWCR:2']  | ['AWP:1']                   || FOLLOW
			// different elements
			['AWP:1']           | ['FBCR:2']                  || PRECEDE
			['AWP:2']           | ['FBCR:1']                  || PRECEDE
			['AWP:1']           | ['FBCR:2','AWP:1']          || PRECEDE
			['FBCR:1']          | ['AWP:2']                   || FOLLOW
			['FBCR:1']          | ['AWCR:1','AWP:2']          || FOLLOW
			['AWCR:1','AWCR:2'] | ['AWCR:1']                  || FOLLOW
	}

}
