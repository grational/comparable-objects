package it.grational.aggregate

import spock.lang.*

/**
 * This Spock specification was auto generated by 'gigawatt'
 * @author d7392
 * @date 21-03-2021 06.07
 */
class AggregatorUSpec extends Specification {

	@Unroll
	def "Should be capable of append different elements to the internal list"() {
		given: 'instance an aggregator'
			def aggregator = new Object() as Aggregator
		and: 'initialize it'
			aggregator.list = initialList
		when:
			aggregator << newElement
		then:
			aggregator.list == expected
		where:
			initialList | newElement || expected
			// numbers
			[1, 2, 3]   | 4          || [1, 2, 3, 4]
			[1, 2, 3]   | 2          || [1, 4, 3]
			// letters
			['a', 'b', 'c'] | 'd'    || ['a', 'b', 'c', 'd']
			['a', 'b', 'c'] | 'b'    || ['a', 'bb', 'c']
	}

}
